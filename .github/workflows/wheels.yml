name: Deploy

on: push

jobs:

  build-wheels:
    name: Build wheels for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Set up haxe
        uses: ./.github/actions/setup-haxe
        if: runner.os != 'Linux'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_BUILD_VERBOSITY: 3
          CIBW_BEFORE_BUILD_LINUX: >
            source scripts/install-haxe.sh
          CIBW_ENVIRONMENT_LINUX: >
            PATH=/opt/haxe:/opt/neko:$PATH
            LD_LIBRARY_PATH=/opt/neko:$LD_LIBRARY_PATH
            NEKOPATH=/opt/neko
          CIBW_BEFORE_TEST: >
            pip install -r requirements.txt &&
            pip install -i https://test.pypi.org/simple/ -r requirements-testpypi.txt
          CIBW_SKIP: "pp* *-win32 *-manylinux_i686 *-musllinux_*"
          CIBW_ARCHS_MACOS: "auto64 arm64"

      - name: Upload wheel artifacts
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: ./wheelhouse/*.whl


  fuse-wheels:
    name: Fuse macOS wheels
    runs-on: ubuntu-latest
    needs: build-wheels

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Download all the dists
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: wheelhouse

      - name: Create universal2 wheels
        run: >-
          pip install delocate
          python scripts/fuse-wheels.py

      - name: Upload universal2 wheels
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/*universal2.whl


  build-sdist:
    name: Build source distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          fetch-depth: 0

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/*.tar.gz
